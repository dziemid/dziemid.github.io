<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Greg Dziemidowicz's Blog]]></title>
  <link href="http://gregdmd.com/atom.xml" rel="self"/>
  <link href="http://gregdmd.com/"/>
  <updated>2013-12-21T23:36:46+11:00</updated>
  <id>http://gregdmd.com/</id>
  <author>
    <name><![CDATA[Greg Dziemidowicz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MelbTram - My First App for Smart Watch]]></title>
    <link href="http://gregdmd.com/blog/2013/12/21/melbtram-my-first-app-for-smart-watch/"/>
    <updated>2013-12-21T22:21:44+11:00</updated>
    <id>http://gregdmd.com/blog/2013/12/21/melbtram-my-first-app-for-smart-watch</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently bought
<a href="http://www.amazon.com/gp/product/B00FB2XNCE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00FB2XNCE&amp;linkCode=as2&amp;tag=gregdziesblog-20">Sony Smart Watch 2</a>
with the intention of developing apps for it (<a href="https://play.google.com/store/apps/details?id=pl.agilesurfing.melbtram">check out MelbTram</a>).</p>

<p>I am quite happy with this purchase, it&rsquo;s really convenient to be able to see who is calling or read a message at simple glance.
I have chosen Sony Smart Watch, mainly because it runs Android and supports my <a href="http://www.amazon.com/gp/product/B00ABPKHH0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00ABPKHH0&amp;linkCode=as2&amp;tag=gregdziesblog-20">Nexus phone</a>.</p>

<p>I have created my first app in two sessions on consecutive weekends (two Sundays). The first session was about being able to deploy
simple &ldquo;Hello World&rdquo; app to the watch.</p>

<p>As I never developed before for Android, the first challenge was how to put my phone into debug mode. It&rsquo;s quite easy:</p>

<blockquote><p>At the “About” screen, scroll to the bottom and tap on “Build number” seven times.</p><footer><strong>mr.boyfox</strong> <cite><a href='http://stackoverflow.com/questions/16707137/how-to-find-and-turn-on-usb-debugging-mode-on-nexus-4'>stackoverflow.com/questions/&hellip;</a></cite></footer></blockquote>


<p>If your device is in debug mode, you should be able to run, and see:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$> ./platform-tools/adb devices
</span><span class='line'>List of devices attached
</span><span class='line'>XXXXXXXXXXXXXXXX  device</span></code></pre></td></tr></table></div></figure>


<p>Then, I was following instructions from <a href="http://developer.sonymobile.com/knowledge-base/tutorials/android_tutorial/how-to-create-an-app-extension-for-sony-smartwatch-2/">Sony Developer website</a>
and I was able successfully deploy my &ldquo;Hello World&rdquo;. Yay!</p>

<p>The second sessions was about actually developing the app. The app is truly <a href="http://www.amazon.com/gp/product/0307887898/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307887898&amp;linkCode=as2&amp;tag=gregdziesblog-20">a minimum viable product</a>, created and deployed to Play store within one day ;)
The problem I&rsquo;ve decided to tackle was &ldquo;when is the best time to leave home/office in order to catch a tram?&rdquo;.</p>

<p>I&rsquo;ve based my solution on &ldquo;SampleControlExtension&rdquo; provided with the SDK.
Using it as starting point, step by step I&rsquo;ve transformed it into the final form.
The app is very simple. It consists of &ldquo;Preferences&rdquo; screen on the phone, where you setup your tram stops and routes,
and simple screen on the watch displaying next 2 tram arrival times.</p>

<p>The app let&rsquo;s you configure 4 different routes. When you open the app on the watch, 4 background tasks like this
will be started:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.sonyericsson.extras.liveware.extension.util.control.ControlExtension</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.AsyncTask</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RetriveTramInfoTask</span>  <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">TramArrivals</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Exception</span> <span class="n">exception</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SampleControlSmartWatch2</span> <span class="n">myListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TramInfoRequest</span> <span class="n">request</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">viewLabelId</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">RetriveTramInfoTask</span><span class="o">(</span><span class="n">SampleControlSmartWatch2</span> <span class="n">myListener</span><span class="o">,</span> <span class="kt">int</span> <span class="n">viewLabelId</span><span class="o">,</span> <span class="n">TramInfoRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">myListener</span> <span class="o">=</span> <span class="n">myListener</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">viewLabelId</span> <span class="o">=</span> <span class="n">viewLabelId</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">request</span> <span class="o">=</span> <span class="n">request</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="n">TramArrivals</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">urls</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">TramTrackerAPI</span> <span class="n">api</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TramTrackerAPI</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">api</span><span class="o">.</span><span class="na">nextTram</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">exception</span> <span class="o">=</span> <span class="n">e</span><span class="o">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">TramArrivals</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">TramArrivals</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%d in %s minutes, then %s&quot;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">routeId</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">),</span> <span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
</span><span class='line'>      <span class="n">myListener</span><span class="o">.</span><span class="na">setWatchEvent</span><span class="o">(</span><span class="n">viewLabelId</span><span class="o">,</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The end result looks more or less like this:</p>

<p><img src="https://lh6.ggpht.com/mQNZMEdtsCHhPVWCl5QmDSe6k5sE-a3U5e-dV64IASoWYSLcnV3wMxW603qYm8iXUQ=h310-rw"></p>

<p><a href="https://play.google.com/store/apps/details?id=pl.agilesurfing.melbtram">The MelbTram app</a> is available for free in Google play store, check it out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Global Day of CodeRetreat 2013]]></title>
    <link href="http://gregdmd.com/blog/2013/12/21/global-day-of-coderetreat-2013/"/>
    <updated>2013-12-21T13:50:17+11:00</updated>
    <id>http://gregdmd.com/blog/2013/12/21/global-day-of-coderetreat-2013</id>
    <content type="html"><![CDATA[<p>On 14th of December I&rsquo;ve attended a CodeRetreat in Melbourne.
It was a <a href="http://globalday.coderetreat.org">Global Day of CodeReterat</a> &ndash; the 3rd one I was a part of.
This year I&rsquo;ve done something new, rather then facilitating I focused on enabling others to do so.
I have run 3 google hangouts trainings<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> for first time facilitators
(
<a href="https://plus.google.com/events/cpssmqq8u4f8u5qkkk768b629i0">#1</a>
<a href="https://plus.google.com/events/c4olgo868inn0n0aumkeqefe20g">#2</a> ) and <a href="https://plus.google.com/events/cgt5ts5a7nkk9lis8sdu00q0270">hosts</a>.
I&rsquo;ve also worked closely with the great team organizing CodeRetreat in Melbourne.
It was the first Global CodeRetreat I&rsquo;ve attended, rather then facilitated :)</p>

<p>As always the day was full of fun and learning :) In Melbourne we had a good mixed group
of around 25 developers. People were programming in Ruby, JavaScript, Java, PHP and probably some other languages as well.</p>

<p>CodeRetreat was hosted by REA with food sponsored by ThoughtWorks. REA was hosting us for the second time in the last 2 months &ndash;
not so long ago we had run an <a href="http://techblog.realestate.com.au/tdd-in-bash-aka-our-1st-internal-code-retreat-rea/">internal CodeRetreat</a> there.</p>

<p><span class='pullquote-right' data-pullquote='&#8220;Multi-facilitation&#8221; was interesting experiment we tried.'>
As far as our CodeRetreat goes, we followed a fairly <a href="http://coderetreat.org/facilitating/structure-of-a-coderetreat">standard format</a>.
We started the first session at around 10AM and we had 5 sessions in total. &ldquo;Multi-facilitation&rdquo; was interesting experiment we tried.
Our main facilitator was <a href="https://twitter.com/iparips">Ilya Paripsa</a>, however he had 4 other people helping him. So the first session was facilitated by
Ilya and Luke, second session by Luke and Qing and so on. The setup worked reasonably well, with the main benefit of giving more people an opportunity to have a go
at facilitating. I wouldn&rsquo;t recommend it as a default arrangement<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, but it might be something to consider when you have many volunteers.
</span></p>

<p>Our main theme of this CodeRetreat was Test-Driven development. What exercises have we tried?</p>

<ol>
<li>Warm up.

<ul>
<li>I was pairing in JavaScript.</li>
</ul>
</li>
<li>Ping pong pair programming.

<ul>
<li>Pairing again in JavaScript.</li>
</ul>
</li>
<li>Short methods. No conditions.

<ul>
<li>I was pairing in Ruby, using OO polymorphism to get rid of conditions.</li>
</ul>
</li>
<li><a href="http://coderetreat.org/profiles/blogs/taking-baby-steps">Taking baby steps</a>

<ul>
<li>I was pairing in Java.</li>
</ul>
</li>
<li>Do whatever you like.

<ul>
<li>I was pairing in Ruby, using functional style and a lot of <a href="http://pryrepl.org/">pry</a></li>
<li>Afterwards, for fun, I&rsquo;ve tried to fit our solution into <a href="https://twitter.com/dziemid/status/411784405460324352">a tweet</a>. (Took me 2 tweets).</li>
</ul>
</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>     <span class="n">P</span><span class="o">=</span><span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:x</span><span class="p">,</span><span class="ss">:y</span><span class="p">){</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span><span class="n">P</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span><span class="k">end</span><span class="p">;</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">n</span>
</span><span class='line'>        <span class="o">[</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">),</span> <span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>     <span class="k">end</span><span class="p">}</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">g</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'>        <span class="n">a</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:n</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="o">|</span><span class="n">b</span><span class="o">=</span><span class="p">(</span><span class="nb">p</span><span class="o">.</span><span class="n">n</span><span class="o">&amp;</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">size</span><span class="p">;</span><span class="n">a</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">b</span><span class="o">==</span><span class="mi">2</span><span class="o">||</span><span class="n">b</span><span class="o">==</span><span class="mi">3</span><span class="p">}</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="n">g</span><span class="p">(</span><span class="o">[</span><span class="n">P</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>I am looking forward to the next CodeRetreat, hopefully within the next few months :)</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Thank you <a href="https://twitter.com/martinklose">Martin</a> and <a href="https://twitter.com/jthurne">Jim</a> for involving me in this.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Recommended way is to pair facilitate.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
