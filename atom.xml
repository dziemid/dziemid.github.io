<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Greg Dziemidowicz's Blog]]></title>
  <link href="http://gregdmd.com/atom.xml" rel="self"/>
  <link href="http://gregdmd.com/"/>
  <updated>2014-06-15T19:47:07+10:00</updated>
  <id>http://gregdmd.com/</id>
  <author>
    <name><![CDATA[Greg Dziemidowicz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Analysing AWS CloudTrail Logs With ElasticSearch and Kibana]]></title>
    <link href="http://gregdmd.com/blog/2014/06/15/analysing-aws-cloudtrail-logs-with-elasticsearch-and-kibana/"/>
    <updated>2014-06-15T18:33:12+10:00</updated>
    <id>http://gregdmd.com/blog/2014/06/15/analysing-aws-cloudtrail-logs-with-elasticsearch-and-kibana</id>
    <content type="html"><![CDATA[<p>Summary of my recent spike with ElasticSearch, Kibana and Docker.</p>

<h2>Quick and dirty forensics</h2>

<p>Recently we had an situation were <a href="http://aws.amazon.com/cloudtrail/">CloudTrail</a> was invaluable tool in finding out what happened. The only issue was usability of the logs.</p>

<p>We are new to the tool, so at the time we had a logging enabled, but not much more. When the incident happened we pretty much just run <code>s3sync sync</code> and than worked with logs &ldquo;by hand&rdquo; in a manner similar to this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat * | jq . -C | grep -i eventname -A 10 -B 10 \
</span><span class='line'>| grep -iv "describe" | grep -iv "list" | grep -iv "get" | less -R</span></code></pre></td></tr></table></div></figure>


<p>It worked, but left me with a feeling that there must be a better way.</p>

<h2>The better way</h2>

<p><span class='pullquote-right' data-pullquote='How hard would it be to get something useful out of ElasticSearch and Kibana?'>
Talking with colleague on the tram an idea emerged in my head. How hard would it be to get something useful out of ElasticSearch and Kibana? I never used either, but I&rsquo;ve been told I should be pretty easy.</p>

<p>I am here to report, it was easy and fun.. taking less than 2h to get to interesting results.
</span></p>

<p>In the end, I had a great interactive tool that enabled me to interact with logs in a fun an engaging way. I could easily ask questions like:</p>

<ul>
<li>What was happening between 11:40 and 11:45</li>
<li>Which user makes the most requests?</li>
<li>What are some of the unusual requests?</li>
</ul>


<p>So how have I done it?</p>

<p>To maximize fun and learning factor, I&rsquo;ve decided to do everything in <a href="https://www.docker.io">Docker</a>.</p>

<ol>
<li><p><em>Getting docker</em> &ndash; I am using <a href="https://github.com/boot2docker/osx-installer">boot2docker</a> and my first step was updating it..</p></li>
<li><p><em>Choosing container</em> &ndash; I&rsquo;ve started with <a href="https://registry.hub.docker.com/_/centos/">centos</a>. Unfortunately I had issues with getting ElasticSearch to work (missing commands) and in the end I&rsquo;ve decided to try ubuntu. This proved much easier, so ubuntu was my base image.</p></li>
<li><p><em>Base ElasticSearch image</em> &ndash; preparing it was quite easy. The main thing I&rsquo;ve learnt was to use <code>--rm</code> flag to enable container internet connectivity (this was needed in order to access package repositories). I&rsquo;ve installed java, apache, ElasticSearch and Kibana. Once I was done, I&rsquo;ve made sure to run <code>docker commit 8cc7b46cXXXX elasticsearch</code>.</p></li>
<li><p><em>Running container with ports exposed</em> &ndash; <code>docker run --rm -i -t -p 80:80 -p 9200:9200 elasticsearch /bin/bash</code></p></li>
<li><p><em>Uploading CloudTrail logs</em> &ndash; I&rsquo;ve found <a href="https://github.com/mostlygeek/cloudtrail-elasticsearch-import">cloudtrail-elasticsearch-import project</a> on github, which made it quite easy and matter of running <code>node import.sh.js  --elasticsearch http://IP:9200  --bucket BUCKET_NAME -r REGION -p PATH/2014/06/</code></p></li>
<li><p><em>Profit</em> &ndash; At this stage I had my Kibana dashboard ready for me to start playing with.</p></li>
</ol>


<h2>Benefits of Docker</h2>

<p>A few days later, I&rsquo;ve decided to play with ElasticSearch a little bit more.</p>

<p>Nice side effect of using Docker &ndash; I still had my ElasticSearch image without any data on it.  I&rsquo;ve decided to do something different this time &ndash; visualise my bank transactions.</p>

<p>Long story short, it worked &ndash; the main challenge was how to upload exported CSV into ElasticSearch.</p>

<p>Apparently, the way to copy file from my laptop into running container involves netcat:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker run --rm -i -t -p 80:80 -p 9200:9200 -p 10101:10101 elasticsearch /bin/bash
</span><span class='line'>container: $ nc -l 10101 &gt; transactions.csv
</span><span class='line'>$ cat transactions.csv | nc IP 10101
</span></code></pre></td></tr></table></div></figure>


<p>Once the file was there, I used <a href="https://github.com/AgileWorksOrg/elasticsearch-river-csv">elasticsearch-river-csv</a> plugin to load it. Just make sure <code>elasticsearch</code> user has access to that file and can create files in the directory. (As always, looking at /var/log/* helped in understanding what was going on.)</p>

<p>Happy hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Should I Focus On?]]></title>
    <link href="http://gregdmd.com/blog/2014/05/25/what-should-i-focus-on/"/>
    <updated>2014-05-25T16:46:28+10:00</updated>
    <id>http://gregdmd.com/blog/2014/05/25/what-should-i-focus-on</id>
    <content type="html"><![CDATA[<p>I am working again on my goals. I want to be focused and work on the most important things.</p>

<p>In this short post I will share some of the things I have been doing to get myself on the right track again.</p>

<h2>What should I work on?</h2>

<p>This is maybe the most difficult question, but once you get it figured out everything else becomes easier.</p>

<p>In the past I used following system with good results:</p>

<ul>
<li>What do I want to be true when I am 40?</li>
<li>Great, what needs to happen than before I am 30?</li>
<li>And what should I do this year?</li>
</ul>


<p>Recently, I have been introduced by <a href="https://twitter.com/gigantiqandy">Andy</a> to intermediate objective maps. They complement the system I&rsquo;ve been using, by visualising it nicely. I&rsquo;ve created small little tool for myself to make <a href="http://gregdmd.com/iom">creation of intermediate objective maps</a>
 easier.</p>

<p><img src="http://s3.postimg.org/jbjh5nx03/Screen_Shot_2014_05_25_at_5_24_13_pm.png"></p>

<p> Check it out and let me know what you think.</p>

<p> The best tip Andy gave me was to share my map with my peers and get feedback. I am going to implement this advice soon :)</p>

<p> As a bonus, few weeks back I was wondering how much time actually I have before I am 30, hence this little tool, <a href="http://gregdmd.com/dob">the age calculator</a>.</p>

<h2>What should I work on this week?</h2>

<p>To visualise what I am working on at the moment (and where my attention should be) I&rsquo;ve started using recently <a href="http://trello.com">virtual board</a> provided by Trello.</p>

<p>At the moment my personal kanban board has following columns: &ldquo;Thinking about&rdquo;, &ldquo;To do&rdquo;, &ldquo;Doing&rdquo;, &ldquo;Waiting / Tracking&rdquo; and &ldquo;Done&rdquo;.</p>

<p><img src="http://s30.postimg.org/qygzfyhtt/Screen_Shot_2014_05_25_at_5_27_28_pm.png"></p>

<p>I am experimenting with the on-line tool for this, as it gives me a lot of flexibility. Trello has a good mobile client and nice web UI.</p>

<h2>What should I work on next week?</h2>

<p>During a normal week I have heaps of interesting thoughts. They are inspired by conversation I have, tweets &amp; blogs I skim over, etc. It&rsquo;s quite easy to move on and forget about them.</p>

<p>To avoid this, I am capturing all those little thoughts and ideas in my &ldquo;Inbox&rdquo; <a href="https://evernote.com/">Evernote</a> notebook. Every Saturday I go through my &ldquo;Inbox&rdquo; and I triage the notes. This gives me a chance to action some of them, or at least plan what to do next.</p>

<p>Evernote again is great for this, as it has easy to use mobile client that doesn&rsquo;t get in the way. For triage, Evernote desktop client is efficient and enjoyable to work with.</p>

<h2>Conclusion</h2>

<p>Hope you are inspired to try some of these ideas out. What tools and techniques are you using to stay focused?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make It Happen]]></title>
    <link href="http://gregdmd.com/blog/2014/03/25/make-it-happen/"/>
    <updated>2014-03-25T22:11:49+11:00</updated>
    <id>http://gregdmd.com/blog/2014/03/25/make-it-happen</id>
    <content type="html"><![CDATA[<p>(<em>This is a transcript of a speech I&rsquo;ve delivered recently in my Toastmasters club.</em>)</p>

<p>Two years ago a bus full of employes of 1 company department was heading for a team event. I was sitting on this bus and chatting with a person next to me.</p>

<blockquote><p>“Hey, did you notice that in our department we are quite good at knowledge sharing?”<br/>“You know, we show each other what are we working on, we practice together”<br/>“How about other departments? We don’t share so much with them?”<br/>“Yeah, let&#8217;s do something about it!”</p></blockquote>


<p>and we did.</p>

<p>If you are working with other people, and sometimes you want to change things then please listen. I would like to share with you 3 simple techniques you can do, to introduce new ideas successfully.</p>

<p><span class='pullquote-right' data-pullquote='“Brown bag”. It’s a informal meeting held over lunch'>
The first technique is called
“Brown bag”. It’s a informal meeting held over lunch
, hence the name, as people are bringing their own lunches.</p>

<p>How can it help?
In the office, people are often busy, have conflicting meetings, and generally don’t have time to brain storm and listen to your new ideas. That was certainly the case in my situation. The problem I &amp; my friend wanted to tackle was inter department knowledge sharing. We were thinking about organising internal conference and that certainly meant involving bunch of people across different departments. By having our kick off session over lunch, we were able to gather bunch of otherwise busy people on very short notice. In the session, we shared and explained our idea and we used the second technique that I would to cover next..</p>

<p></span></p>

<p><span class='pullquote-right' data-pullquote='“Ask for help” - it’s so much easier when you have people helping you make your idea happen'>
“Ask for help” &ndash; it’s so much easier when you have people helping you make your idea happen. In our case, organising a conference was certainly not a 1 person or even 2 people job. So many things needed to be done: Securing sponsorship and approval of management, organising food and venue, finding speakers, creating posters and many other small jobs. By asking for help during brown bag we got a few volunteers that would help us take care of some of those areas. By asking for help we decreased our workload and we made our idea more likely be successful. One of the volunteers helped us with using the third and last technique I would like to mention today..
</span></p>

<p><span class='pullquote-right' data-pullquote='&#8220;Corporate angel&#8221; is high level execuctive who has an interest in your idea'>
 &ldquo;Corporate angel&rdquo; is high level execuctive who has an interest in your idea and supports it. We identified 1 of the company directors as our corporate angel, and luckily he liked our idea. He said his executive team was in fact thinking how they can engage employees more. By having him on board it was much easier to secure sponsorship or negotiate with middle management. We were planning on having our conference during business hours and we wanted to have as many people attending as possible. Some of the managers we talked to were concerned how this will affect their projects and were suggesting that we try something smaller instead. This was against our goal of reaching to people we don’t know across different departments and organising something extraordinary. By having support of the company director it was possible to get a green light and do it despite some concerns from our managers.
</span></p>

<p>We used more techniques than <em>“Brown bag”</em>, <em>“Ask for help”</em> or <em>“Corporate angel”</em>. You can read about those and more in a book by Linda Rising and Mary Lynn Manns called “Fearless change, patterns for introducing new ideas”, I highly recommend this book.</p>

<p>In the end, we managed to organise our conference. It was a great success, with 2 tracks, around 10 speakers and almost 100 people attending. This all started by 2 people having a crazy idea in the bus.</p>

<p>In a big company, two normal workers, like you and me. So if we could do it, you can do it. Go, read the <a href="http://www.amazon.com/gp/product/0201741571/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0201741571&amp;linkCode=as2&amp;tag=gregdziesblog-20">“Fearless change&#8221; book</a> and made your ideas happen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MelbTram - My First App for Smart Watch]]></title>
    <link href="http://gregdmd.com/blog/2013/12/21/melbtram-my-first-app-for-smart-watch/"/>
    <updated>2013-12-21T22:21:44+11:00</updated>
    <id>http://gregdmd.com/blog/2013/12/21/melbtram-my-first-app-for-smart-watch</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently bought
<a href="http://www.amazon.com/gp/product/B00FB2XNCE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00FB2XNCE&amp;linkCode=as2&amp;tag=gregdziesblog-20">Sony Smart Watch 2</a>
with the intention of developing apps for it (<a href="https://play.google.com/store/apps/details?id=pl.agilesurfing.melbtram">check out MelbTram</a>).</p>

<p>I am quite happy with this purchase, it&rsquo;s really convenient to be able to see who is calling or read a message at simple glance.
I have chosen Sony Smart Watch, mainly because it runs Android and supports my <a href="http://www.amazon.com/gp/product/B00ABPKHH0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00ABPKHH0&amp;linkCode=as2&amp;tag=gregdziesblog-20">Nexus phone</a>.</p>

<p>I have created my first app in two sessions on consecutive weekends (two Sundays). The first session was about being able to deploy
simple &ldquo;Hello World&rdquo; app to the watch.</p>

<p>As I never developed before for Android, the first challenge was how to put my phone into debug mode. It&rsquo;s quite easy:</p>

<blockquote><p>At the “About” screen, scroll to the bottom and tap on “Build number” seven times.</p><footer><strong>mr.boyfox</strong> <cite><a href='http://stackoverflow.com/questions/16707137/how-to-find-and-turn-on-usb-debugging-mode-on-nexus-4'>stackoverflow.com/questions/&hellip;</a></cite></footer></blockquote>


<p>If your device is in debug mode, you should be able to run, and see:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$> ./platform-tools/adb devices
</span><span class='line'>List of devices attached
</span><span class='line'>XXXXXXXXXXXXXXXX  device</span></code></pre></td></tr></table></div></figure>


<p>Then, I was following instructions from <a href="http://developer.sonymobile.com/knowledge-base/tutorials/android_tutorial/how-to-create-an-app-extension-for-sony-smartwatch-2/">Sony Developer website</a>
and I was able successfully deploy my &ldquo;Hello World&rdquo;. Yay!</p>

<p>The second sessions was about actually developing the app. The app is truly <a href="http://www.amazon.com/gp/product/0307887898/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307887898&amp;linkCode=as2&amp;tag=gregdziesblog-20">a minimum viable product</a>, created and deployed to Play store within one day ;)
The problem I&rsquo;ve decided to tackle was &ldquo;when is the best time to leave home/office in order to catch a tram?&rdquo;.</p>

<p>I&rsquo;ve based my solution on &ldquo;SampleControlExtension&rdquo; provided with the SDK.
Using it as starting point, step by step I&rsquo;ve transformed it into the final form.
The app is very simple. It consists of &ldquo;Preferences&rdquo; screen on the phone, where you setup your tram stops and routes,
and simple screen on the watch displaying next 2 tram arrival times.</p>

<p>The app let&rsquo;s you configure 4 different routes. When you open the app on the watch, 4 background tasks like this
will be started:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.sonyericsson.extras.liveware.extension.util.control.ControlExtension</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.AsyncTask</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RetriveTramInfoTask</span>  <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">TramArrivals</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Exception</span> <span class="n">exception</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SampleControlSmartWatch2</span> <span class="n">myListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TramInfoRequest</span> <span class="n">request</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">viewLabelId</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">RetriveTramInfoTask</span><span class="o">(</span><span class="n">SampleControlSmartWatch2</span> <span class="n">myListener</span><span class="o">,</span> <span class="kt">int</span> <span class="n">viewLabelId</span><span class="o">,</span> <span class="n">TramInfoRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">myListener</span> <span class="o">=</span> <span class="n">myListener</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">viewLabelId</span> <span class="o">=</span> <span class="n">viewLabelId</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">request</span> <span class="o">=</span> <span class="n">request</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="n">TramArrivals</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">urls</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">TramTrackerAPI</span> <span class="n">api</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TramTrackerAPI</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">api</span><span class="o">.</span><span class="na">nextTram</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">exception</span> <span class="o">=</span> <span class="n">e</span><span class="o">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">TramArrivals</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">TramArrivals</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%d in %s minutes, then %s&quot;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">routeId</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">),</span> <span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
</span><span class='line'>      <span class="n">myListener</span><span class="o">.</span><span class="na">setWatchEvent</span><span class="o">(</span><span class="n">viewLabelId</span><span class="o">,</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The end result looks more or less like this:</p>

<p><img src="https://lh6.ggpht.com/mQNZMEdtsCHhPVWCl5QmDSe6k5sE-a3U5e-dV64IASoWYSLcnV3wMxW603qYm8iXUQ=h310-rw"></p>

<p><a href="https://play.google.com/store/apps/details?id=pl.agilesurfing.melbtram">The MelbTram app</a> is available for free in Google play store, check it out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Global Day of CodeRetreat 2013]]></title>
    <link href="http://gregdmd.com/blog/2013/12/21/global-day-of-coderetreat-2013/"/>
    <updated>2013-12-21T13:50:17+11:00</updated>
    <id>http://gregdmd.com/blog/2013/12/21/global-day-of-coderetreat-2013</id>
    <content type="html"><![CDATA[<p>On 14th of December I&rsquo;ve attended a CodeRetreat in Melbourne.
It was a <a href="http://globalday.coderetreat.org">Global Day of CodeReterat</a> &ndash; the 3rd one I was a part of.
This year I&rsquo;ve done something new, rather then facilitating I focused on enabling others to do so.
I have run 3 google hangouts trainings<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> for first time facilitators
(
<a href="https://plus.google.com/events/cpssmqq8u4f8u5qkkk768b629i0">#1</a>
<a href="https://plus.google.com/events/c4olgo868inn0n0aumkeqefe20g">#2</a> ) and <a href="https://plus.google.com/events/cgt5ts5a7nkk9lis8sdu00q0270">hosts</a>.
I&rsquo;ve also worked closely with the great team organizing CodeRetreat in Melbourne.
It was the first Global CodeRetreat I&rsquo;ve attended, rather then facilitated :)</p>

<p>As always the day was full of fun and learning :) In Melbourne we had a good mixed group
of around 25 developers. People were programming in Ruby, JavaScript, Java, PHP and probably some other languages as well.</p>

<p>CodeRetreat was hosted by REA with food sponsored by ThoughtWorks. REA was hosting us for the second time in the last 2 months &ndash;
not so long ago we had run an <a href="http://techblog.realestate.com.au/tdd-in-bash-aka-our-1st-internal-code-retreat-rea/">internal CodeRetreat</a> there.</p>

<p><span class='pullquote-right' data-pullquote='&#8220;Multi-facilitation&#8221; was interesting experiment we tried.'>
As far as our CodeRetreat goes, we followed a fairly <a href="http://coderetreat.org/facilitating/structure-of-a-coderetreat">standard format</a>.
We started the first session at around 10AM and we had 5 sessions in total. &ldquo;Multi-facilitation&rdquo; was interesting experiment we tried.
Our main facilitator was <a href="https://twitter.com/iparips">Ilya Paripsa</a>, however he had 4 other people helping him. So the first session was facilitated by
Ilya and Luke, second session by Luke and Qing and so on. The setup worked reasonably well, with the main benefit of giving more people an opportunity to have a go
at facilitating. I wouldn&rsquo;t recommend it as a default arrangement<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, but it might be something to consider when you have many volunteers.
</span></p>

<p>Our main theme of this CodeRetreat was Test-Driven development. What exercises have we tried?</p>

<ol>
<li>Warm up.

<ul>
<li>I was pairing in JavaScript.</li>
</ul>
</li>
<li>Ping pong pair programming.

<ul>
<li>Pairing again in JavaScript.</li>
</ul>
</li>
<li>Short methods. No conditions.

<ul>
<li>I was pairing in Ruby, using OO polymorphism to get rid of conditions.</li>
</ul>
</li>
<li><a href="http://coderetreat.org/profiles/blogs/taking-baby-steps">Taking baby steps</a>

<ul>
<li>I was pairing in Java.</li>
</ul>
</li>
<li>Do whatever you like.

<ul>
<li>I was pairing in Ruby, using functional style and a lot of <a href="http://pryrepl.org/">pry</a></li>
<li>Afterwards, for fun, I&rsquo;ve tried to fit our solution into <a href="https://twitter.com/dziemid/status/411784405460324352">a tweet</a>. (Took me 2 tweets).</li>
</ul>
</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>     <span class="n">P</span><span class="o">=</span><span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:x</span><span class="p">,</span><span class="ss">:y</span><span class="p">){</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span><span class="n">P</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span><span class="k">end</span><span class="p">;</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">n</span>
</span><span class='line'>        <span class="o">[</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">),</span> <span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>     <span class="k">end</span><span class="p">}</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">g</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'>        <span class="n">a</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:n</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="o">|</span><span class="n">b</span><span class="o">=</span><span class="p">(</span><span class="nb">p</span><span class="o">.</span><span class="n">n</span><span class="o">&amp;</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">size</span><span class="p">;</span><span class="n">a</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">b</span><span class="o">==</span><span class="mi">2</span><span class="o">||</span><span class="n">b</span><span class="o">==</span><span class="mi">3</span><span class="p">}</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="n">g</span><span class="p">(</span><span class="o">[</span><span class="n">P</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>I am looking forward to the next CodeRetreat, hopefully within the next few months :)</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Thank you <a href="https://twitter.com/martinklose">Martin</a> and <a href="https://twitter.com/jthurne">Jim</a> for involving me in this.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Recommended way is to pair facilitate.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
