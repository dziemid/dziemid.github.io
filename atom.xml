<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Greg Dziemidowicz's Blog]]></title>
  <link href="http://gregdmd.com/atom.xml" rel="self"/>
  <link href="http://gregdmd.com/"/>
  <updated>2015-07-19T12:03:43+10:00</updated>
  <id>http://gregdmd.com/</id>
  <author>
    <name><![CDATA[Greg Dziemidowicz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Delivery Engineering Team]]></title>
    <link href="http://gregdmd.com/blog/2015/07/19/delivery-engineering-team/"/>
    <updated>2015-07-19T10:45:59+10:00</updated>
    <id>http://gregdmd.com/blog/2015/07/19/delivery-engineering-team</id>
    <content type="html"><![CDATA[<h2>What is it?</h2>

<p>One definition could be:</p>

<blockquote><p>Delivery engineering team enables others to deliver business value faster.</p></blockquote>

<p>Others, in this context, relates to product/project software delivery teams.</p>

<p><img itemprop="image" src="http://gregdmd.com/images/deleng.jpg"/></p>

<p>It seems to be a fairly new term, judging by the lack of definition in google or a recent tweet from #devopsdays in Melbourne:</p>

<blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">Finally an appropriate name for what i actually do - Delivery Engingeering. Thanks <a href="https://twitter.com/hashtag/devopsdays?src=hash">#devopsdays</a></p>&mdash; griggle (@griggle) <a href="https://twitter.com/griggle/status/621483550974439425">July 16, 2015</a></blockquote>


<script async src="http://gregdmd.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Another, maybe more common name seems to be <a href="https://www.rallydev.com/blog/engineering/you-don-t-need-devops-team-you-need-tools-team">&ldquo;tooling team&rdquo;</a>.</p>

<p>It&rsquo;s definitely not a <a href="http://www.thoughtworks.com/radar/techniques/separate-devops-team">&ldquo;devops team&rdquo;</a>.</p>

<h2>What&rsquo;s in?</h2>

<p>In the delivery engineering team, that I am a part of, some of the metrics we are trying to improve are:</p>

<ul>
<li>CI Build time</li>
<li>Deploy time</li>
<li>New server creation time</li>
<li>New production like environment creation time</li>
<li>New developer laptop setup time</li>
</ul>


<p>I guess there are many ways to go about moving above, but in the teams I&rsquo;ve worked with, the day to day often was:</p>

<ul>
<li>Moving software from a legacy platform to a new one. (Think AWS/docker migration)</li>
<li>Creating tools and practices to support the above.</li>
<li>Technology evangelism, training &amp; support for product teams.</li>
</ul>


<h2>What&rsquo;s out?</h2>

<p>The product teams should have full freedom and responsibility to run their apps in production.</p>

<p>So it&rsquo;s not the responsibility of a delivery engineering team to:</p>

<ul>
<li>Upgrade frameworks and libraries used by a product team. The product team itself should do it.</li>
<li>Carry a pager, be on-call as support for production systems (unless those are the systems that delivery engineering team is a custodian of, for example CI server)</li>
<li>Be a gate keeper on a path to production. The product teams themselves can decide what and when to release.</li>
</ul>


<h2>Techniques &amp; Practices</h2>

<p>Some of the techniques and practices important for a delivery engineering team:</p>

<ul>
<li>Team rotation</li>
<li><a href="http://martinfowler.com/bliki/ContinuousDelivery.html">Continuous Delivery</a></li>
<li>Showcase</li>
</ul>


<h2>Do you need a delivery engineering team?</h2>

<p>Maybe :&ndash;)</p>

<p>You most likely need delivery engineering, and if you are big enough, you may decide to form a team around it. The size I have experience with and seems to work OK, is one small delivery engineering team for roughly three product teams. To use <a href="http://blog.crisp.se/2012/11/14/henrikkniberg/scaling-agile-at-spotify">spotify terminology</a>, delivery engineering team is part of a tribe and supports squads.</p>

<h2>To sum up</h2>

<p>This is based on my experience, what do you think? :&ndash;)</p>

<p>Are you a member of delivery engineering team? What do you think is important to share?</p>

<p>Are you a &ldquo;customer&rdquo; of delivery engineering team, for example a member of product team? What are your toughts on having a delivery engineering team?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Launching HeCoSiRe]]></title>
    <link href="http://gregdmd.com/blog/2015/01/04/launching-hecosire/"/>
    <updated>2015-01-04T12:10:53+11:00</updated>
    <id>http://gregdmd.com/blog/2015/01/04/launching-hecosire</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve launched my new pet project HeCoSiRe and you can be part of it ;)</p>

<p><img src="http://gregdmd.com/images/hecosire.png" alt="HeCoSiRe" /></p>

<p>So what is it about?</p>

<p><strong>Functionally</strong>, the vision is to have a platform to track how you feel and generate insights into your health.</p>

<p><em>Adults get an average of two to four colds per year(<a href="http://www.lung.org/lung-disease/influenza/in-depth-resources/facts-about-the-common-cold.html">source</a>)</em>
I&rsquo;ve got mine over the x-mas break. Not fun, but a good motivation for a pet project.</p>

<p>From <strong>technology</strong> point of view, it&rsquo;s just an excuse to learn more about tools involved (<em>Android, Rails and machine learning + more?</em>).</p>

<p>So how can you get involved?</p>

<!--more-->


<h2>Interested in learning about your health?</h2>

<p>You can help by just getting on board, using the tool and providing feedback.</p>

<p>It&rsquo;s early days, but you can already easily capture how you feel. Over time I plan to add features around
analysing the data. Maybe one day HeCoSiRe will be able to notice:
<em>every time you start feeling sick and you eat a lemon you actually don&rsquo;t get sick</em>.</p>

<p>There is <a href="http://hecosire.com/">a website hecosire.com</a> where you can create an account.</p>

<p>You can also get an <a href="https://play.google.com/store/apps/details?id=hecosire.com.hecosireapp">Android HeCoSiReApp</a>.</p>

<p>Last but not least, there is a <a href="https://twitter.com/hecosire">Twitter</a> and <a href="https://trello.com/b/iw8dxU8A/hecosire">Trello</a> if you want to interact about the product.</p>

<h2>Interested about technology?</h2>

<p>It&rsquo;s a pet project and as much as I am interested in the product I also want to learn how to use tools involved.</p>

<p>For example I am new to Android and I&rsquo;m building an Android app. I am sure the way it&rsquo;s done at the moment it&rsquo;s not the best way to do it.
Overtime I hope to learn and improve, but in the meantime feedback and pull requests are welcomed.</p>

<p>Yes &ndash; HeCoSiRe is open source, you can find it on <a href="https://github.com/hecosire/">HeCoSiRe github</a>.</p>

<p>This also means, that if there is a feature you would like to see in HeCoSiRe, you can add it ;)</p>

<h2>Summary</h2>

<p><em>HeCoSiRe &ndash; what a strange name?</em> Yes I know, I needed something quickly for my &ldquo;rails new&rdquo; ;) It&rsquo;s from &ldquo;<strong>He</strong>althy, <strong>Co</strong>ming down, <strong>Si</strong>ck and <strong>Re</strong>covering&rdquo; cycle that I decided to use in the app.</p>

<p>If you are reading this, next step is to <a href="http://hecosire.com/users/sign_up">create a HeCoSiRe account</a> and start tracking :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hudson.plugins.git.GitException: Failed to Fetch From git@github.com]]></title>
    <link href="http://gregdmd.com/blog/2014/12/12/hudson-dot-plugins-dot-git-dot-gitexception-failed-to-fetch-from-git-at-github-dot-com/"/>
    <updated>2014-12-12T21:49:26+11:00</updated>
    <id>http://gregdmd.com/blog/2014/12/12/hudson-dot-plugins-dot-git-dot-gitexception-failed-to-fetch-from-git-at-github-dot-com</id>
    <content type="html"><![CDATA[<h2>Problem: Red build</h2>

<p>Unless your Jenkins project just stopped building with this exception <code>hudson.plugins.git.GitException: Failed to fetch from git@github.com</code> you are unlikely to get much of this post ;)</p>

<p>I guess there might be bunch of the reasons why you could see this message, but here is what happend to me..</p>

<!--more-->


<p></p>

<p>My project hosted on github suddenly started to fail when building in jenkins. Initially I had no clue why and I&rsquo;ve done bunch of google searches:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> jenkins github returned status code 128:
</span><span class='line'> jenkins ssh keys github stoped working
</span><span class='line'> "hudson.plugins.git.GitException: Failed to fetch from git@github.com"</span></code></pre></td></tr></table></div></figure>


<h2>Investigation</h2>

<p>Thinking a little bit more about my situation. We have a Jenkins that is connecting to GitHub using different ssh keys depending on project (<a href="https://developer.github.com/guides/managing-deploy-keys/#deploy-keys">deploy key approach</a> ). So I continued to google:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> jenkins multiple ssh keys not working
</span><span class='line'> ssh debug which key git is using</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>That led me to additional debugging commands: <code>ssh -vvvT git@github.com</code> and adding in <code>~/.ssh/config</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  Host github.com 
</span><span class='line'>    LogLevel DEBUG3</span></code></pre></td></tr></table></div></figure>


<p>While checking out projects from github and looking and debugging output problem became quite clear. Git, while using SSH, was authenticating using incorrect ssh key.</p>

<h2>Solution</h2>

<p>In the end, what happend was that previous day I&rsquo;ve replaced <code>~/.ssh/config</code> on Jenkins box. Among other things, there was a problematic bit of config:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host *
</span><span class='line'>  ControlMaster auto
</span><span class='line'>  ControlPath /tmp/ssh_mux_%h_%p_%r
</span><span class='line'>  ControlPersist 10m   # - this was causing issues</span></code></pre></td></tr></table></div></figure>


<blockquote><p>ControlPersist &ndash;  that automatically
  starts a background ssh(1) multiplex master when connecting. This
  connection can <strong>stay alive indefinitely</strong>, or can be set to
  automatically close after a user-specified duration of inactivity</p></blockquote>

<p>Above configuration was causing issues, when different projects were being build on Jenkins that were meant to use different ssh keys (while talking to github).</p>

<p>Removing above config solved the problem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1-1 Feedback Blog Post]]></title>
    <link href="http://gregdmd.com/blog/2014/09/21/1-1-feedback-blog-post/"/>
    <updated>2014-09-21T17:45:33+10:00</updated>
    <id>http://gregdmd.com/blog/2014/09/21/1-1-feedback-blog-post</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been introduced to one to one team feedback by Pat Kua in 2011. To this date, it&rsquo;s one of my favourited practices in an agile project <em>( I recommend Pat&rsquo;s blog post series you can find <a href="https://www.thekua.com/atwork/2009/10/a-guide-to-receiving-feedback-part-i-ask-for-it/">here</a> )</em>.</p>

<p>During last 12 months or so, I was luckly enough to work in a team that was interested and happy to practice it. Also, teams around me were curious about it and I&rsquo;ve run a few introductory sessions.</p>

<!--more-->


<p></p>

<p>Together with Ilya, I&rsquo;ve written up a short blog post explaining a little bit why and how we have been practicing it. You can find the <a href="http://techblog.realestate.com.au/one-to-one-feedback-at-rea/">blog post here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Should You Attend Refactoring Code Retreat?]]></title>
    <link href="http://gregdmd.com/blog/2014/07/20/why-should-you-attend-refactoring-code-retreat/"/>
    <updated>2014-07-20T19:38:52+10:00</updated>
    <id>http://gregdmd.com/blog/2014/07/20/why-should-you-attend-refactoring-code-retreat</id>
    <content type="html"><![CDATA[<p>First of all, I will be honest with you with you&hellip; Refactoring Code Retreat is just more fancy name for a good old <a href="http://legacycoderetreat.typepad.com/blog/2011/11/how-i-run-legacy-code-retreat.html">Legacy Code Retreat</a>.</p>

<p>Why use different name? After the last internal Code Retreat we speculated that the &ldquo;legacy&rdquo; was a put off for some people, that would otherwise enjoy the event:</p>

<blockquote><p>Legacy code during weekend? I see enough of that during the week!</p><footer><strong>Developer</strong></footer></blockquote>


<p></p>

<p>So this time, we are changing the name, trying to make it more attractive ;)</p>

<p>Anyway, why should you attend? In my opinion, Legacy(Refactoring) Code Retreat is worth your time because:</p>

<!--more-->


<p></p>

<ul>
<li><strong>Pair programming</strong> &ndash; You get to pair with other passionate devs. In fact at least 5 different ones during the day. How many new tricks can you learn?</li>
<li><strong>Getting better with Legacy Code</strong> &ndash; Have you ever had to change legacy code without any tests? During Code Retreat you will practice techniques to put such a legacy code under tests. It&rsquo;s a chance to practice some of the ideas from <a href="http://www.amazon.com/gp/product/0131177052/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0131177052&amp;linkCode=as2&amp;tag=gregdziesblog-20&amp;linkId=U6WOCUN4QHGJU2V7">Working Effectively with Legacy Code</a> book.</li>
<li><strong>Fun</strong> &ndash; We are going to work with <a href="https://github.com/jbrains/trivia">legacy code</a> that is actually nice. It is specifically crafted to by well suited for a CodeRetreat and it provides good training ground for applying techniques we want to master.</li>
</ul>


<p><strong>You can <a href="http://www.eventbrite.com.au/e/refactoring-code-retreat-melbourne-tickets-12272143311"onclick="trackOutboundLink('http://www.eventbrite.com.au/e/refactoring-code-retreat-melbourne-tickets-12272143311'); return false;"> register for Refactoring Code Retreat in Melbourne</a> here.</strong></p>

<p>If you would like to learn a little bit more about Legacy Code Retreat, <a href="http://blog.adrianbolboaca.ro/2014/04/legacy-coderetreat/">have a look here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dinging Ah-Counter Android App]]></title>
    <link href="http://gregdmd.com/blog/2014/07/19/dinging-ah-counter-android-app/"/>
    <updated>2014-07-19T20:10:58+10:00</updated>
    <id>http://gregdmd.com/blog/2014/07/19/dinging-ah-counter-android-app</id>
    <content type="html"><![CDATA[<p>The Ah-Counter is responsible for noting and keeping track of words and sounds used as a ‘crutch’ or
‘pause filler’ by anyone who speaks during the <a href="http://www.toastmasters.org/Members/MemberExperience/MeetingRoles/Ahcounter.aspx">Toastmasters meeting</a>. Words may be inappropriate interjections such
as <em>and</em>, <em>well</em>, <em>but</em>, <em>so</em>, <em>like</em>, <em>you know</em>. Sounds may be <em>ah</em>, <em>um</em>, <em>er</em>.</p>

<!--more-->


<p></p>

<p>If you are a speaker, at the end of the meeting Ah-Counter will tell you how many times he caught you making inappropriate interjections, for example:</p>

<blockquote><p>&#8230;<br/>Greg - 7 times.<br/>Mark - only 1 time.<br/>&#8230;</p><footer><strong>Ah-Counter</strong></footer></blockquote>


<p>This always leaves me wondering: &ldquo;When exactly do I make those sounds?&rdquo;. Reports like this are delivered too late, after I had already finished speaking.</p>

<p>I&rsquo;ve seen clubs solve this problem &ndash; Ah-Counter has a ring and uses it anytime he catches you. &ldquo;Ding!&rdquo; and immediately you are reminded to stop making &ldquo;um&rdquo;.</p>

<p>My current assignment is to get a dinging device for my club &ndash;
<a href="http://easy-speak.org/clubdata.php?c=4566"onclick="trackOutboundLink('http://easy-speak.org/clubdata.php?c=4566'); return false;"> Docklands Toastmasters</a>. I&rsquo;ve spent some time today going around shops looking for something like this:</p>

<p><img src="http://gregdmd.com/images/tablebell.jpg" alt="bell" /></p>

<p>but I couldn&rsquo;t find any&hellip; So instead I&rsquo;ve made an app ;)</p>

<p>You can get <a href="https://play.google.com/store/apps/details?id=agilesurfing.pl.dingingahcounter"onclick="trackOutboundLink('https://play.google.com/store/apps/details?id=agilesurfing.pl.dingingahcounter'); return false;"> Dinging Ah-Counter Android App for free  </a> here.</p>

<p><a href="https://play.google.com/store/apps/details?id=agilesurfing.pl.dingingahcounter"onclick="trackOutboundLink('https://play.google.com/store/apps/details?id=agilesurfing.pl.dingingahcounter'); return false;">
  <img itemprop="image" src="http://gregdmd.com/images/ahcounter.jpg"/>
</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conditional Commit When Deploying to Heroku With Semaphore CI]]></title>
    <link href="http://gregdmd.com/blog/2014/07/10/conditional-commit-when-deploying-to-heroku-with-semaphoreapp-ci/"/>
    <updated>2014-07-10T21:04:49+10:00</updated>
    <id>http://gregdmd.com/blog/2014/07/10/conditional-commit-when-deploying-to-heroku-with-semaphoreapp-ci</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s say that before deploying to Heroku we want to check for any assets changes, and in case we find some we want to do some work.</p>

<p>If there are changes, we want to precompile assets and push any changes back to repo.</p>

<p>Here is example deploy script that does it:</p>

<!--more-->


<p></p>

<figure class='code'><figcaption><span>ci_semaphore_deploy.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>git fetch heroku
</span><span class='line'>
</span><span class='line'><span class="o">[</span> <span class="k">$(</span>git diff master heroku/master app/assets | wc -l<span class="k">)</span> -gt 0 <span class="o">]</span> <span class="o">||</span> <span class="nv">ASSET_CHANGE</span><span class="o">=</span>1
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -z <span class="s2">&quot;$ASSET_CHANGE&quot;</span> <span class="o">]</span>;
</span><span class='line'><span class="k">then</span>
</span><span class='line'><span class="k">    </span>git reset --hard
</span><span class='line'>    git config --global user.email <span class="s2">&quot;hi@example.com&quot;</span>
</span><span class='line'>    git config --global user.name <span class="s2">&quot;semaphoreapp &quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">RAILS_GROUPS</span><span class="o">=</span>assets <span class="nv">RAILS_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>rake assets:precompile
</span><span class='line'>    git add --all public/assets
</span><span class='line'>    git commit -m <span class="s2">&quot;Update asset manifest before deploying [ci skip]&quot;</span>
</span><span class='line'>    git push origin master
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="k">    </span><span class="nb">echo</span> <span class="s2">&quot;No asset changes detected...&quot;</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>git push --force heroku <span class="nv">$BRANCH_NAME</span>:master
</span></code></pre></td></tr></table></div></figure>


<p>Interesting bits:</p>

<ul>
<li>Line 3 and 5: To see if there are any changes we need to fetch branches from heroku.</li>
<li>Line 9:  Semaphore CI is rewritting <code>config/database.yml</code> which was problematic combined with <code>RAILS_ENV=production</code></li>
<li>Line 10,11: We need to do this to make <code>git push</code> work. Also, you will need to <a href="https://semaphoreapp.com/docs/adding-more-ssh-keys.html">add extra ssh key</a> to be able to push.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up PostGIS on Semaphore CI]]></title>
    <link href="http://gregdmd.com/blog/2014/07/09/setting-up-postgis-on-semaphore-ci/"/>
    <updated>2014-07-09T23:50:27+10:00</updated>
    <id>http://gregdmd.com/blog/2014/07/09/setting-up-postgis-on-semaphore-ci</id>
    <content type="html"><![CDATA[<p>Example how configure semaphoreapp.com CI so that it can run tests requiring postgis:</p>

<!--more-->


<p></p>

<figure class='code'><figcaption><span>ci_semaphore.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nb">set</span> -e
</span><span class='line'>
</span><span class='line'>sudo apt-add-repository -y ppa:ubuntugis/ppa
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install -y postgresql-9.3-postgis
</span><span class='line'>createdb <span class="nv">$DATABASE_NAME_TEST</span> -U <span class="nv">$DATABASE_POSTGRESQL_USERNAME</span>
</span><span class='line'>
</span><span class='line'>psql -c <span class="s1">&#39;CREATE EXTENSION postgis;&#39;</span> -U <span class="nv">$DATABASE_POSTGRESQL_USERNAME</span> -d <span class="nv">$DATABASE_NAME_TEST</span>
</span><span class='line'>psql -c <span class="s1">&#39;CREATE EXTENSION postgis_topology;&#39;</span> -U <span class="nv">$DATABASE_POSTGRESQL_USERNAME</span> -d <span class="nv">$DATABASE_NAME_TEST</span>
</span><span class='line'>bundle install --deployment --path vendor/bundle
</span><span class='line'>
</span><span class='line'>bundle <span class="nb">exec </span>rake db:setup
</span><span class='line'>bundle <span class="nb">exec </span>rake db:test:prepare
</span></code></pre></td></tr></table></div></figure>


<p>I coundn&rsquo;t google it myself, so I hope this helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extracting Your LinkedIn Connections Into Neo4j Graph Database]]></title>
    <link href="http://gregdmd.com/blog/2014/06/22/extracting-your-linkedin-connections-into-neo4j-graph-database/"/>
    <updated>2014-06-22T17:36:30+10:00</updated>
    <id>http://gregdmd.com/blog/2014/06/22/extracting-your-linkedin-connections-into-neo4j-graph-database</id>
    <content type="html"><![CDATA[<p>Today I was playing with exploring my LinkedIn network &ndash; just for fun and as a pretext to play with Neo4j.</p>

<p>I&rsquo;ve managed to ask simple questions like <em>&ldquo;With whom do I have the most contacts in common?&rdquo;</em> or <em>&ldquo;What is the most popular first name in my network?&rdquo;</em> (Piotr &amp; Marcin)</p>

<h2>Challange #1 &ndash; How to get the data?</h2>

<p>I have decided to use <a href="http://inmaps.linkedinlabs.com/network">inmaps</a> from Linkedin. Below you can see screenshot of my network:</p>

<!--more-->


<p></p>

<p><img src="http://gregdmd.com/images/linked_network.jpg" alt="alt tag" /></p>

<p>By using Chrome Developer Tools you can see Network traffic made by inmaps. There are 2 interesting resources for us:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://inmaps.linkedinlabs.com/network_data
</span><span class='line'>{
</span><span class='line'>  "edges":[
</span><span class='line'>    {"dest":"Um6QrFGUXX","src":"Uv1KrWpoXX"}, ...
</span><span class='line'>  ]
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>http://inmaps.linkedinlabs.com/connections_data
</span><span class='line'>
</span><span class='line'>{ 
</span><span class='line'>  "Um6QrFGUXX":{
</span><span class='line'>    "firstName":"Marcin",
</span><span class='line'>    "lastName":"Nowak",
</span><span class='line'>    "headline":"Developer"
</span><span class='line'>  },
</span><span class='line'>  "Uv1KrWpoXX":{
</span><span class='line'>    "firstName":"Piotr",
</span><span class='line'>    "lastName":"Kowalski",
</span><span class='line'>    "headline":"Manager"
</span><span class='line'>  },
</span><span class='line'>  ...
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;ve saved content of both on my file system. This is the data that we can now import into Neo4j.</p>

<h2>Importing data into Neo4j</h2>

<p>First you need Neo4j, you can get it here: <a href="http://www.neo4j.org/download">http://www.neo4j.org/download</a></p>

<p>I&rsquo;ve used simple Ruby script similar to this in order to import data:</p>

<figure class='code'><figcaption><span>import.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1"># gem &#39;neo4j-core&#39;, &quot;~&gt;3.0.0.alpha&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="vi">@session</span> <span class="o">=</span> <span class="ss">Neo4j</span><span class="p">:</span><span class="ss">:Session</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="ss">:server_db</span><span class="p">,</span> <span class="s2">&quot;http://localhost:7474&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_person</span> <span class="nb">id</span>
</span><span class='line'>  <span class="ss">Neo4j</span><span class="p">:</span><span class="ss">:Label</span><span class="o">.</span><span class="n">find_nodes</span><span class="p">(</span><span class="ss">:person</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="nb">id</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">upsert_person</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span>
</span><span class='line'>  <span class="nb">id</span> <span class="o">=</span> <span class="n">key</span>
</span><span class='line'>  <span class="n">properties</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">id</span><span class="p">:</span> <span class="n">key</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">firstname</span><span class="p">:</span> <span class="n">value</span><span class="o">[</span><span class="s2">&quot;firstName&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">lastname</span><span class="p">:</span> <span class="n">value</span><span class="o">[</span><span class="s2">&quot;lastName&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">headline</span><span class="p">:</span> <span class="n">value</span><span class="o">[</span><span class="s2">&quot;headline&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">existing</span> <span class="o">=</span> <span class="n">get_person</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">existing</span>
</span><span class='line'>    <span class="n">existing</span><span class="o">.</span><span class="n">update_props</span><span class="p">(</span><span class="n">properties</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">person</span> <span class="o">=</span> <span class="ss">Neo4j</span><span class="p">:</span><span class="ss">:Node</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">properties</span><span class="p">,</span> <span class="ss">:person</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">upsert_connection</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">other_id</span><span class="p">,</span> <span class="n">type</span><span class="p">)</span>
</span><span class='line'>  <span class="n">properties</span> <span class="o">=</span> <span class="p">{</span><span class="ss">type</span><span class="p">:</span> <span class="n">type</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">person</span> <span class="o">=</span> <span class="n">get_person</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
</span><span class='line'>  <span class="n">connection</span> <span class="o">=</span> <span class="n">get_person</span><span class="p">(</span><span class="n">other_id</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">existing</span> <span class="o">=</span> <span class="n">person</span><span class="o">.</span><span class="n">rels</span><span class="p">(</span><span class="ss">type</span><span class="p">:</span> <span class="ss">:connected</span><span class="p">,</span> <span class="ss">dir</span><span class="p">:</span> <span class="ss">:incoming</span><span class="p">,</span> <span class="ss">between</span><span class="p">:</span> <span class="n">connection</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">existing</span>
</span><span class='line'>    <span class="n">existing</span><span class="o">.</span><span class="n">update_props</span><span class="p">(</span><span class="n">properties</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">person</span><span class="o">.</span><span class="n">create_rel</span><span class="p">(</span><span class="ss">:connected</span><span class="p">,</span> <span class="n">connection</span><span class="p">,</span> <span class="n">properties</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">network_data</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;network_data.json&#39;</span><span class="p">));</span>
</span><span class='line'><span class="n">connections_data</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;connections_data.json&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="n">connections_data</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span>
</span><span class='line'>  <span class="n">upsert_person</span> <span class="n">key</span><span class="p">,</span><span class="n">value</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">network_data</span><span class="o">[</span><span class="s2">&quot;edges&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">edge</span><span class="o">|</span>
</span><span class='line'>  <span class="n">upsert_connection</span><span class="p">(</span><span class="n">edge</span><span class="o">[</span><span class="s2">&quot;dest&quot;</span><span class="o">]</span><span class="p">,</span><span class="n">edge</span><span class="o">[</span><span class="s2">&quot;src&quot;</span><span class="o">]</span><span class="p">,</span><span class="s2">&quot;src&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Exploring the data</h2>

<p>Once data was imported I went to <a href="http://localhost:7474/browser/">http://localhost:7474/browser/</a> and started experimenting with queries.</p>

<h3>With whom do I have the most contacts in common?</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MATCH    (user)-[r]-(friend)
</span><span class='line'>WITH     user, count(friend) AS friends
</span><span class='line'>ORDER BY friends DESC
</span><span class='line'>WHERE    friends &gt; 90 
</span><span class='line'>RETURN   user.firstname, user.lastname, user.headline, friends</span></code></pre></td></tr></table></div></figure>


<h3>What is the most popular first name in my network?</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MATCH    (user)
</span><span class='line'>WITH     user.firstname as firstname, 
</span><span class='line'>         collect(DISTINCT user.lastname) as lastnames,  
</span><span class='line'>         count(DISTINCT user.lastname) as c
</span><span class='line'>ORDER    BY c DESC     
</span><span class='line'>RETURN   firstname, lastnames, c
</span><span class='line'>
</span><span class='line'>("Piotr", "Marcin", "Pawel", "Anna", "Paul", "Lukasz")</span></code></pre></td></tr></table></div></figure>


<h3>What are the most popular headlines in my network?</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MATCH    (user)
</span><span class='line'>WITH     left(upper(trim(user.headline)), 12) as headline, 
</span><span class='line'>         collect(DISTINCT (user.firstname + user.lastname)) as names,  
</span><span class='line'>         count(DISTINCT (user.firstname + user.lastname)) as c
</span><span class='line'>ORDER    BY c DESC
</span><span class='line'>RETURN   headline, names, c
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>("RECRUITMENT", "SOFTWARE DEV", "SOFTWARE ENG")
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it for today ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Analysing AWS CloudTrail Logs With ElasticSearch and Kibana]]></title>
    <link href="http://gregdmd.com/blog/2014/06/15/analysing-aws-cloudtrail-logs-with-elasticsearch-and-kibana/"/>
    <updated>2014-06-15T18:33:12+10:00</updated>
    <id>http://gregdmd.com/blog/2014/06/15/analysing-aws-cloudtrail-logs-with-elasticsearch-and-kibana</id>
    <content type="html"><![CDATA[<p>Summary of my recent spike with ElasticSearch, Kibana and Docker.</p>

<h2>Quick and dirty forensics</h2>

<p>Recently we had an situation were <a href="http://aws.amazon.com/cloudtrail/">CloudTrail</a> was invaluable tool in finding out what happened. The only issue was usability of the logs.</p>

<p>We are new to the tool, so at the time we had a logging enabled, but not much more. When the incident happened we pretty much just run <code>s3sync sync</code> and than worked with logs &ldquo;by hand&rdquo; in a manner similar to this:</p>

<!--more-->


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat * | jq . -C | grep -i eventname -A 10 -B 10 \
</span><span class='line'>| grep -iv "describe" | grep -iv "list" | grep -iv "get" | less -R</span></code></pre></td></tr></table></div></figure>


<p>It worked, but left me with a feeling that there must be a better way.</p>

<h2>The better way</h2>

<p><span class='pullquote-right' data-pullquote='How hard would it be to get something useful out of ElasticSearch and Kibana?'>
Talking with colleague on the tram an idea emerged in my head. How hard would it be to get something useful out of ElasticSearch and Kibana? I never used either, but I&rsquo;ve been told I should be pretty easy.</p>

<p>I am here to report, it was easy and fun.. taking less than 2h to get to interesting results.
</span></p>

<p>In the end, I had a great interactive tool that enabled me to interact with logs in a fun an engaging way. I could easily ask questions like:</p>

<ul>
<li>What was happening between 11:40 and 11:45</li>
<li>Which user makes the most requests?</li>
<li>What are some of the unusual requests?</li>
</ul>


<p>So how have I done it?</p>

<p>To maximize fun and learning factor, I&rsquo;ve decided to do everything in <a href="https://www.docker.io">Docker</a>.</p>

<ol>
<li><p><em>Getting docker</em> &ndash; I am using <a href="https://github.com/boot2docker/osx-installer">boot2docker</a> and my first step was updating it..</p></li>
<li><p><em>Choosing container</em> &ndash; I&rsquo;ve started with <a href="https://registry.hub.docker.com/_/centos/">centos</a>. Unfortunately I had issues with getting ElasticSearch to work (missing commands) and in the end I&rsquo;ve decided to try ubuntu. This proved much easier, so ubuntu was my base image.</p></li>
<li><p><em>Base ElasticSearch image</em> &ndash; preparing it was quite easy. The main thing I&rsquo;ve learnt was to use <code>--rm</code> flag to enable container internet connectivity (this was needed in order to access package repositories). I&rsquo;ve installed java, apache, ElasticSearch and Kibana. Once I was done, I&rsquo;ve made sure to run <code>docker commit 8cc7b46cXXXX elasticsearch</code>.</p></li>
<li><p><em>Running container with ports exposed</em> &ndash; <code>docker run --rm -i -t -p 80:80 -p 9200:9200 elasticsearch /bin/bash</code></p></li>
<li><p><em>Uploading CloudTrail logs</em> &ndash; I&rsquo;ve found <a href="https://github.com/mostlygeek/cloudtrail-elasticsearch-import">cloudtrail-elasticsearch-import project</a> on github, which made it quite easy and matter of running <code>node import.sh.js  --elasticsearch http://IP:9200  --bucket BUCKET_NAME -r REGION -p PATH/2014/06/</code></p></li>
<li><p><em>Profit</em> &ndash; At this stage I had my Kibana dashboard ready for me to start playing with.</p></li>
</ol>


<h2>Benefits of Docker</h2>

<p>A few days later, I&rsquo;ve decided to play with ElasticSearch a little bit more.</p>

<p>Nice side effect of using Docker &ndash; I still had my ElasticSearch image without any data on it.  I&rsquo;ve decided to do something different this time &ndash; visualise my bank transactions.</p>

<p>Long story short, it worked &ndash; the main challenge was how to upload exported CSV into ElasticSearch.</p>

<p>Apparently, the way to copy file from my laptop into running container involves netcat:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker run --rm -i -t -p 80:80 -p 9200:9200 -p 10101:10101 elasticsearch /bin/bash
</span><span class='line'>container: $ nc -l 10101 &gt; transactions.csv
</span><span class='line'>$ cat transactions.csv | nc IP 10101
</span></code></pre></td></tr></table></div></figure>


<p>Once the file was there, I used <a href="https://github.com/AgileWorksOrg/elasticsearch-river-csv">elasticsearch-river-csv</a> plugin to load it. Just make sure <code>elasticsearch</code> user has access to that file and can create files in the directory. (As always, looking at /var/log/* helped in understanding what was going on.)</p>

<p>Happy hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Should I Focus On?]]></title>
    <link href="http://gregdmd.com/blog/2014/05/25/what-should-i-focus-on/"/>
    <updated>2014-05-25T16:46:28+10:00</updated>
    <id>http://gregdmd.com/blog/2014/05/25/what-should-i-focus-on</id>
    <content type="html"><![CDATA[<p>I am working again on my goals. I want to be focused and work on the most important things.</p>

<p>In this short post I will share some of the things I have been doing to get myself on the right track again.</p>

<!--more-->


<p></p>

<h2>What should I work on?</h2>

<p>This is maybe the most difficult question, but once you get it figured out everything else becomes easier.</p>

<p>In the past I used following system with good results:</p>

<ul>
<li>What do I want to be true when I am 40?</li>
<li>Great, what needs to happen than before I am 30?</li>
<li>And what should I do this year?</li>
</ul>


<p>Recently, I have been introduced by <a href="https://twitter.com/gigantiqandy">Andy</a> to intermediate objective maps. They complement the system I&rsquo;ve been using, by visualising it nicely. I&rsquo;ve created small little tool for myself to make <a href="http://gregdmd.com/iom">creation of intermediate objective maps</a>
 easier.</p>

<p><img src="http://s3.postimg.org/jbjh5nx03/Screen_Shot_2014_05_25_at_5_24_13_pm.png"></p>

<p> Check it out and let me know what you think.</p>

<p> The best tip Andy gave me was to share my map with my peers and get feedback. I am going to implement this advice soon :)</p>

<p> As a bonus, few weeks back I was wondering how much time actually I have before I am 30, hence this little tool, <a href="http://gregdmd.com/dob">the age calculator</a>.</p>

<h2>What should I work on this week?</h2>

<p>To visualise what I am working on at the moment (and where my attention should be) I&rsquo;ve started using recently <a href="http://trello.com">virtual board</a> provided by Trello.</p>

<p>At the moment my personal kanban board has following columns: &ldquo;Thinking about&rdquo;, &ldquo;To do&rdquo;, &ldquo;Doing&rdquo;, &ldquo;Waiting / Tracking&rdquo; and &ldquo;Done&rdquo;.</p>

<p><img src="http://s30.postimg.org/qygzfyhtt/Screen_Shot_2014_05_25_at_5_27_28_pm.png"></p>

<p>I am experimenting with the on-line tool for this, as it gives me a lot of flexibility. Trello has a good mobile client and nice web UI.</p>

<h2>What should I work on next week?</h2>

<p>During a normal week I have heaps of interesting thoughts. They are inspired by conversation I have, tweets &amp; blogs I skim over, etc. It&rsquo;s quite easy to move on and forget about them.</p>

<p>To avoid this, I am capturing all those little thoughts and ideas in my &ldquo;Inbox&rdquo; <a href="https://evernote.com/">Evernote</a> notebook. Every Saturday I go through my &ldquo;Inbox&rdquo; and I triage the notes. This gives me a chance to action some of them, or at least plan what to do next.</p>

<p>Evernote again is great for this, as it has easy to use mobile client that doesn&rsquo;t get in the way. For triage, Evernote desktop client is efficient and enjoyable to work with.</p>

<h2>Conclusion</h2>

<p>Hope you are inspired to try some of these ideas out. What tools and techniques are you using to stay focused?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make It Happen]]></title>
    <link href="http://gregdmd.com/blog/2014/03/25/make-it-happen/"/>
    <updated>2014-03-25T22:11:49+11:00</updated>
    <id>http://gregdmd.com/blog/2014/03/25/make-it-happen</id>
    <content type="html"><![CDATA[<p>(<em>This is a transcript of a speech I&rsquo;ve delivered recently in my Toastmasters club.</em>)</p>

<p>Two years ago a bus full of employes of 1 company department was heading for a team event. I was sitting on this bus and chatting with a person next to me.</p>

<blockquote><p>“Hey, did you notice that in our department we are quite good at knowledge sharing?”<br/>“You know, we show each other what are we working on, we practice together”<br/>“How about other departments? We don’t share so much with them?”<br/>“Yeah, let&#8217;s do something about it!”</p></blockquote>


<p>and we did.</p>

<!--more-->


<p></p>

<p>If you are working with other people, and sometimes you want to change things then please listen. I would like to share with you 3 simple techniques you can do, to introduce new ideas successfully.</p>

<p><span class='pullquote-right' data-pullquote='“Brown bag”. It’s a informal meeting held over lunch'>
The first technique is called
“Brown bag”. It’s a informal meeting held over lunch
, hence the name, as people are bringing their own lunches.</p>

<p>How can it help?
In the office, people are often busy, have conflicting meetings, and generally don’t have time to brain storm and listen to your new ideas. That was certainly the case in my situation. The problem I &amp; my friend wanted to tackle was inter department knowledge sharing. We were thinking about organising internal conference and that certainly meant involving bunch of people across different departments. By having our kick off session over lunch, we were able to gather bunch of otherwise busy people on very short notice. In the session, we shared and explained our idea and we used the second technique that I would to cover next..</p>

<p></span></p>

<p><span class='pullquote-right' data-pullquote='“Ask for help” - it’s so much easier when you have people helping you make your idea happen'>
“Ask for help” &ndash; it’s so much easier when you have people helping you make your idea happen. In our case, organising a conference was certainly not a 1 person or even 2 people job. So many things needed to be done: Securing sponsorship and approval of management, organising food and venue, finding speakers, creating posters and many other small jobs. By asking for help during brown bag we got a few volunteers that would help us take care of some of those areas. By asking for help we decreased our workload and we made our idea more likely be successful. One of the volunteers helped us with using the third and last technique I would like to mention today..
</span></p>

<p><span class='pullquote-right' data-pullquote='&#8220;Corporate angel&#8221; is high level execuctive who has an interest in your idea'>
 &ldquo;Corporate angel&rdquo; is high level execuctive who has an interest in your idea and supports it. We identified 1 of the company directors as our corporate angel, and luckily he liked our idea. He said his executive team was in fact thinking how they can engage employees more. By having him on board it was much easier to secure sponsorship or negotiate with middle management. We were planning on having our conference during business hours and we wanted to have as many people attending as possible. Some of the managers we talked to were concerned how this will affect their projects and were suggesting that we try something smaller instead. This was against our goal of reaching to people we don’t know across different departments and organising something extraordinary. By having support of the company director it was possible to get a green light and do it despite some concerns from our managers.
</span></p>

<p>We used more techniques than <em>“Brown bag”</em>, <em>“Ask for help”</em> or <em>“Corporate angel”</em>. You can read about those and more in a book by Linda Rising and Mary Lynn Manns called “Fearless change, patterns for introducing new ideas”, I highly recommend this book.</p>

<p>In the end, we managed to organise our conference. It was a great success, with 2 tracks, around 10 speakers and almost 100 people attending. This all started by 2 people having a crazy idea in the bus.</p>

<p>In a big company, two normal workers, like you and me. So if we could do it, you can do it. Go, read the <a href="http://www.amazon.com/gp/product/0201741571/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0201741571&amp;linkCode=as2&amp;tag=gregdziesblog-20">“Fearless change&#8221; book</a> and made your ideas happen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MelbTram - My First App for Smart Watch]]></title>
    <link href="http://gregdmd.com/blog/2013/12/21/melbtram-my-first-app-for-smart-watch/"/>
    <updated>2013-12-21T22:21:44+11:00</updated>
    <id>http://gregdmd.com/blog/2013/12/21/melbtram-my-first-app-for-smart-watch</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently bought
<a href="http://www.amazon.com/gp/product/B00FB2XNCE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00FB2XNCE&amp;linkCode=as2&amp;tag=gregdziesblog-20">Sony Smart Watch 2</a>
with the intention of developing apps for it (<a href="https://play.google.com/store/apps/details?id=pl.agilesurfing.melbtram">check out MelbTram</a>).</p>

<p>I am quite happy with this purchase, it&rsquo;s really convenient to be able to see who is calling or read a message at simple glance.
I have chosen Sony Smart Watch, mainly because it runs Android and supports my <a href="http://www.amazon.com/gp/product/B00ABPKHH0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00ABPKHH0&amp;linkCode=as2&amp;tag=gregdziesblog-20">Nexus phone</a>.</p>

<p>I have created my first app in two sessions on consecutive weekends (two Sundays). The first session was about being able to deploy
simple &ldquo;Hello World&rdquo; app to the watch.</p>

<!--more-->


<p>
As I never developed before for Android, the first challenge was how to put my phone into debug mode. It&rsquo;s quite easy:</p>

<blockquote><p>At the “About” screen, scroll to the bottom and tap on “Build number” seven times.</p><footer><strong>mr.boyfox</strong> <cite><a href='http://stackoverflow.com/questions/16707137/how-to-find-and-turn-on-usb-debugging-mode-on-nexus-4'>stackoverflow.com/questions/&hellip;</a></cite></footer></blockquote>


<p>If your device is in debug mode, you should be able to run, and see:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$> ./platform-tools/adb devices
</span><span class='line'>List of devices attached
</span><span class='line'>XXXXXXXXXXXXXXXX  device</span></code></pre></td></tr></table></div></figure>


<p>Then, I was following instructions from <a href="http://developer.sonymobile.com/knowledge-base/tutorials/android_tutorial/how-to-create-an-app-extension-for-sony-smartwatch-2/">Sony Developer website</a>
and I was able successfully deploy my &ldquo;Hello World&rdquo;. Yay!</p>

<p>The second sessions was about actually developing the app. The app is truly <a href="http://www.amazon.com/gp/product/0307887898/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307887898&amp;linkCode=as2&amp;tag=gregdziesblog-20">a minimum viable product</a>, created and deployed to Play store within one day ;)
The problem I&rsquo;ve decided to tackle was &ldquo;when is the best time to leave home/office in order to catch a tram?&rdquo;.</p>

<p>I&rsquo;ve based my solution on &ldquo;SampleControlExtension&rdquo; provided with the SDK.
Using it as starting point, step by step I&rsquo;ve transformed it into the final form.
The app is very simple. It consists of &ldquo;Preferences&rdquo; screen on the phone, where you setup your tram stops and routes,
and simple screen on the watch displaying next 2 tram arrival times.</p>

<p>The app let&rsquo;s you configure 4 different routes. When you open the app on the watch, 4 background tasks like this
will be started:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.sonyericsson.extras.liveware.extension.util.control.ControlExtension</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.AsyncTask</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RetriveTramInfoTask</span>  <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">TramArrivals</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Exception</span> <span class="n">exception</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SampleControlSmartWatch2</span> <span class="n">myListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">TramInfoRequest</span> <span class="n">request</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">viewLabelId</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">RetriveTramInfoTask</span><span class="o">(</span><span class="n">SampleControlSmartWatch2</span> <span class="n">myListener</span><span class="o">,</span> <span class="kt">int</span> <span class="n">viewLabelId</span><span class="o">,</span> <span class="n">TramInfoRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">myListener</span> <span class="o">=</span> <span class="n">myListener</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">viewLabelId</span> <span class="o">=</span> <span class="n">viewLabelId</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">request</span> <span class="o">=</span> <span class="n">request</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="n">TramArrivals</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">urls</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">TramTrackerAPI</span> <span class="n">api</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TramTrackerAPI</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">api</span><span class="o">.</span><span class="na">nextTram</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">exception</span> <span class="o">=</span> <span class="n">e</span><span class="o">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">TramArrivals</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">TramArrivals</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%d in %s minutes, then %s&quot;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">routeId</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">),</span> <span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
</span><span class='line'>      <span class="n">myListener</span><span class="o">.</span><span class="na">setWatchEvent</span><span class="o">(</span><span class="n">viewLabelId</span><span class="o">,</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The end result looks more or less like this:</p>

<p><img src="https://lh6.ggpht.com/mQNZMEdtsCHhPVWCl5QmDSe6k5sE-a3U5e-dV64IASoWYSLcnV3wMxW603qYm8iXUQ=h310-rw"></p>

<p><a href="https://play.google.com/store/apps/details?id=pl.agilesurfing.melbtram">The MelbTram app</a> is available for free in Google play store, check it out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Global Day of CodeRetreat 2013]]></title>
    <link href="http://gregdmd.com/blog/2013/12/21/global-day-of-coderetreat-2013/"/>
    <updated>2013-12-21T13:50:17+11:00</updated>
    <id>http://gregdmd.com/blog/2013/12/21/global-day-of-coderetreat-2013</id>
    <content type="html"><![CDATA[<p>On 14th of December I&rsquo;ve attended a CodeRetreat in Melbourne.
It was a <a href="http://globalday.coderetreat.org">Global Day of CodeReterat</a> &ndash; the 3rd one I was a part of.
This year I&rsquo;ve done something new, rather then facilitating I focused on enabling others to do so.
I have run 3 google hangouts trainings<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> for first time facilitators
(
<a href="https://plus.google.com/events/cpssmqq8u4f8u5qkkk768b629i0">#1</a>
<a href="https://plus.google.com/events/c4olgo868inn0n0aumkeqefe20g">#2</a> ) and <a href="https://plus.google.com/events/cgt5ts5a7nkk9lis8sdu00q0270">hosts</a>.
I&rsquo;ve also worked closely with the great team organizing CodeRetreat in Melbourne.
It was the first Global CodeRetreat I&rsquo;ve attended, rather then facilitated :)</p>

<p>As always the day was full of fun and learning :) In Melbourne we had a good mixed group
of around 25 developers. People were programming in Ruby, JavaScript, Java, PHP and probably some other languages as well.</p>

<!--more-->


<p>
CodeRetreat was hosted by REA with food sponsored by ThoughtWorks. REA was hosting us for the second time in the last 2 months &ndash;
not so long ago we had run an <a href="http://techblog.realestate.com.au/tdd-in-bash-aka-our-1st-internal-code-retreat-rea/">internal CodeRetreat</a> there.</p>

<p><span class='pullquote-right' data-pullquote='&#8220;Multi-facilitation&#8221; was interesting experiment we tried.'>
As far as our CodeRetreat goes, we followed a fairly <a href="http://coderetreat.org/facilitating/structure-of-a-coderetreat">standard format</a>.
We started the first session at around 10AM and we had 5 sessions in total. &ldquo;Multi-facilitation&rdquo; was interesting experiment we tried.
Our main facilitator was <a href="https://twitter.com/iparips">Ilya Paripsa</a>, however he had 4 other people helping him. So the first session was facilitated by
Ilya and Luke, second session by Luke and Qing and so on. The setup worked reasonably well, with the main benefit of giving more people an opportunity to have a go
at facilitating. I wouldn&rsquo;t recommend it as a default arrangement<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, but it might be something to consider when you have many volunteers.
</span></p>

<p>Our main theme of this CodeRetreat was Test-Driven development. What exercises have we tried?</p>

<ol>
<li>Warm up.

<ul>
<li>I was pairing in JavaScript.</li>
</ul>
</li>
<li>Ping pong pair programming.

<ul>
<li>Pairing again in JavaScript.</li>
</ul>
</li>
<li>Short methods. No conditions.

<ul>
<li>I was pairing in Ruby, using OO polymorphism to get rid of conditions.</li>
</ul>
</li>
<li><a href="http://coderetreat.org/profiles/blogs/taking-baby-steps">Taking baby steps</a>

<ul>
<li>I was pairing in Java.</li>
</ul>
</li>
<li>Do whatever you like.

<ul>
<li>I was pairing in Ruby, using functional style and a lot of <a href="http://pryrepl.org/">pry</a></li>
<li>Afterwards, for fun, I&rsquo;ve tried to fit our solution into <a href="https://twitter.com/dziemid/status/411784405460324352">a tweet</a>. (Took me 2 tweets).</li>
</ul>
</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>     <span class="n">P</span><span class="o">=</span><span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:x</span><span class="p">,</span><span class="ss">:y</span><span class="p">){</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span><span class="n">P</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span><span class="k">end</span><span class="p">;</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">n</span>
</span><span class='line'>        <span class="o">[</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">),</span> <span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">v</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>     <span class="k">end</span><span class="p">}</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">g</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'>        <span class="n">a</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:n</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="o">|</span><span class="n">b</span><span class="o">=</span><span class="p">(</span><span class="nb">p</span><span class="o">.</span><span class="n">n</span><span class="o">&amp;</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">size</span><span class="p">;</span><span class="n">a</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">b</span><span class="o">==</span><span class="mi">2</span><span class="o">||</span><span class="n">b</span><span class="o">==</span><span class="mi">3</span><span class="p">}</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>     <span class="nb">puts</span> <span class="n">g</span><span class="p">(</span><span class="o">[</span><span class="n">P</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>I am looking forward to the next CodeRetreat, hopefully within the next few months :)</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Thank you <a href="https://twitter.com/martinklose">Martin</a> and <a href="https://twitter.com/jthurne">Jim</a> for involving me in this.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Recommended way is to pair facilitate.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
